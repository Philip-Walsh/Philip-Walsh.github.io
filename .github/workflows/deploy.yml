name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm install -g prettier htmlhint stylelint svgo

      - name: Determine version bump
        id: version
        run: |
          # Get the last commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)
          
          # Check for version bump indicators in commit message
          if [[ $COMMIT_MSG == *"MAJOR"* ]]; then
            echo "bump=major" >> $GITHUB_OUTPUT
          elif [[ $COMMIT_MSG == *"MINOR"* ]]; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
          fi

      - name: Update version
        if: success()
        run: |
          # Read current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Split version into components
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"
          
          # Bump version based on commit message
          if [[ "${{ steps.version.outputs.bump }}" == "major" ]]; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
          elif [[ "${{ steps.version.outputs.bump }}" == "minor" ]]; then
            NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
          else
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          fi
          
          # Update package.json
          npm version $NEW_VERSION --no-git-tag-version
          
          # Create version file for deployment
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          commit_message: "Deploy v${{ env.NEW_VERSION }}" 